import{I as r}from"./index.5f6306cc.js";const x=r("payload",{state:()=>({payload:[["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"],["X","X","X","X","X","X","X","X"]],hexValuePerNibble:[{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"},{firstNibbleHexValue:"-",secondNibbleHexValue:"-"}]}),getters:{entirePayload:e=>e.payload,payloadHexValues:e=>e.hexValuePerNibble,hexadecimalPayloadText:e=>{let l="";for(const i of e.hexValuePerNibble)l+=i.secondNibbleHexValue+i.firstNibbleHexValue;return l}},actions:{updateByteBits(e){for(const l of e)for(const i of l.bytesIndex){const X=this.payload[i];for(const a of l.bitsIndex)X[a]=l.value}this.estimateHexValues()},estimateHexValues(){for(const[e,l]of this.payload.entries()){let i=0,X=0;const a=this.extractNibble("first",l),o=this.extractNibble("second",l);let t=!0;for(const[s,b]of a.entries()){if(b==="X"){this.hexValuePerNibble[e].firstNibbleHexValue="-",t=!1;break}i+=parseInt(b)*Math.pow(2,3-s)}t&&(this.hexValuePerNibble[e].firstNibbleHexValue=i.toString(16).toUpperCase()),t=!0;for(const[s,b]of o.entries()){if(b==="X"){this.hexValuePerNibble[e].secondNibbleHexValue="-",t=!1;break}X+=parseInt(b)*Math.pow(2,3-s)}t&&(this.hexValuePerNibble[e].secondNibbleHexValue=X.toString(16).toUpperCase())}},extractNibble(e,l){return e==="first"?l.slice(4,8):l.slice(0,4)}}});export{x as u};
